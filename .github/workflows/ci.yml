name: appmanager ci

on:
  push:
    branches: [ "development" ]


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checking out
        uses: actions/checkout@v3
      - name: set up jdk
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: setup gradle
        uses: gradle/gradle-build-action@v2

      - name: making gradlew executable
        run: chmod +x ./gradlew

      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}

        #run: |
          #TMP_KEYSTORE_FILE_PATH="${RUNNER_TEMP}"/keystore
          #mkdir "${TMP_KEYSTORE_FILE_PATH}"
          #echo $ENCODED_STRING | base64 -di > "${TMP_KEYSTORE_FILE_PATH}"/keystore.jks

        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > keystore.jks

      - name: Get keystore file  path
        id: keystoreFile
        #run: |
          #TMP_KEYSTORE_FILE_PATH="${RUNNER_TEMP}"/keystore
          #echo "jksfile=$(find "${RUNNER_TEMP}"/keystore.jks)" >> $GITHUB_OUTPUT
        run: echo "jksfile=$(find app/*.jks)" >> $GITHUB_OUTPUT

      - name: Build App
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        #run: ./gradlew assemble
        run:  ./gradlew bundleRelease --stacktrace

      - name: Get release file aab path
        id: releaseAab
        run: echo "aabfile=$(find app/build/outputs/bundle/release/*.aab)" >> $GITHUB_OUTPUT

      - name: print results
        run: |
          echo "JKS file path: ${{ steps.keystoreFile.outputs.jksfile }}"
          echo "AAB file path: ${{ steps.releaseAab.outputs.aabfile }}"


